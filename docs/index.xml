<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rapid Control Prototyping on Rapid Control Prototyping</title><link>https://lubin.kerhuel.eu/</link><description>Recent content in Rapid Control Prototyping on Rapid Control Prototyping</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&amp;copy; 2019 Lubin Kerhuel</copyright><lastBuildDate>Mon, 24 Dec 2018 00:00:00 +0100</lastBuildDate><atom:link href="/" rel="self" type="application/rss+xml"/><item><title>Inverted Pendulum</title><link>https://lubin.kerhuel.eu/project/inverted-pendulum/</link><pubDate>Sat, 01 Dec 2018 00:00:00 +0100</pubDate><guid>https://lubin.kerhuel.eu/project/inverted-pendulum/</guid><description/></item><item><title>Real Time Control for a DC Motor</title><link>https://lubin.kerhuel.eu/project/lab-dc-motor/</link><pubDate>Sat, 01 Dec 2018 00:00:00 +0100</pubDate><guid>https://lubin.kerhuel.eu/project/lab-dc-motor/</guid><description>
&lt;p&gt;Control a 24V DC motor using the MCLV V2 board with a dsPIC 33EP256MC506.
This hands-on is for 5th year students at INSA-Lyon.&lt;/p&gt;
&lt;p&gt;The hands-on Lab subject available at: &lt;a href=&#34;https://rtdc.ctrl-elec.fr/&#34;&gt;https://rtdc.ctrl-elec.fr/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Slides presents the adaptation required to go from a Simulink model for Simulation (or DSPACE) to a Simulink model targeting a microcontrollers. Two topics are presented:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Real-time scheduler / CPU load analysis&lt;/li&gt;
&lt;li&gt;Fixed-point datatypes&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;authors&#34;&gt;Authors:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Romain DELPOUX (Romain.Delpoux at insa-lyon.fr), Assistant Professor, INSA de Lyon, Laboratoire Amp√®re UMR CNRS 5005.&lt;/li&gt;
&lt;li&gt;Lubin KERHUEL (Lubin.Kerhuel at microchip.com), Dr-Engineer, Microchip Technology Inc.&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Inverted Pendulum</title><link>https://lubin.kerhuel.eu/docs/inverted-pendulum/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lubin.kerhuel.eu/docs/inverted-pendulum/</guid><description>
&lt;figure&gt;
&lt;a href=&#34;https://lubin.kerhuel.eu/img/pendulum_platform.jpg&#34;&gt;
&lt;img src=&#34;https://lubin.kerhuel.eu/img/pendulum_platform_top.png&#34; width=&#34;45%&#34; /&gt;
&lt;/a&gt;
&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
&lt;h4&gt;Top of the inverted pendulum&lt;/h4&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h1 id=&#34;presentation&#34;&gt;Presentation&lt;/h1&gt;
&lt;p&gt;Objective is to test a DIY unstable pendulum platform for experimenting various feedback control loop.
The hardware is presented. An overview of the model is given and a LQR feedback control loop tested.&lt;/p&gt;
&lt;!-- test code --&gt;
&lt;p&gt;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
&lt;iframe src=&#34;//player.vimeo.com/video/309876246&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;!-- You tube alternative:
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
&lt;iframe src=&#34;//www.youtube.com/embed/dWTK7dTUvCo&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
--&gt;
Video of the stabilized platform with a 4 state LQR feedback loop. The platform is completely autonomous (no user input).&lt;/p&gt;
&lt;p&gt;The electronic placed at the top of the pendulum composed of a dsPIC 16 bits microcontroller and an inertial sensor (accelerometers and rate gyro). The base of the pendulum is a modified RC toys comprising two wheels driven by two independent DC motor (see &lt;a href=&#34;#hw_trolley&#34;&gt;pictures below&lt;/a&gt;).&lt;/p&gt;
&lt;h1 id=&#34;hardware&#34;&gt;Hardware&lt;/h1&gt;
&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;The head and the base trolley are described successively. They are separated with an $8mm$ carbon tube. The pendulum length is $0.52m$ from wheel axis to the top. Wheels diameters is $8cm$. Pendulum total weight is $200g$ comprising $111g$ for the 4 AA batteries.&lt;/p&gt;
&lt;figure&gt;
&lt;a href=&#34;https://lubin.kerhuel.eu/img/pendulum_platform.jpg&#34;&gt;
&lt;img src=&#34;https://lubin.kerhuel.eu/img/pendulum_platform_reduced_horizontal.png&#34; width=&#34;60%&#34; /&gt;
&lt;/a&gt;
&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
&lt;h4&gt;Inverted Pendulum&lt;/h4&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&#34;head-electronics&#34;&gt;Head electronics&lt;/h2&gt;
&lt;h3 id=&#34;microcontroller&#34;&gt;Microcontroller&lt;/h3&gt;
&lt;p&gt;The controller is a Microstick II board equipped with a dsPIC 33EP128MC202 running at $\approx 70\ MIPS$. It is powered through the USB modified cable which &lt;strong&gt;provide only the power supply&lt;/strong&gt; from 4 AA batteries hold in the base.&lt;/p&gt;
&lt;figure&gt;
&lt;a href=&#34;https://lubin.kerhuel.eu/img/pendulum_top.png&#34;&gt;
&lt;img src=&#34;https://lubin.kerhuel.eu/img/pendulum_top.png&#34; alt=&#34;A prototyping board support a Microstick II board with the *dsPIC 33EP128MC202*. A sensor board from drotek endowing the *ICM-20608* inertial sensor is screwed on the base board.&#34; width=&#34;80%&#34; /&gt;
&lt;/a&gt;
&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
&lt;h4&gt;Microcontroller and sensor on top of the inverted pendulum&lt;/h4&gt;
&lt;p&gt;
A prototyping board support a Microstick II board with the &lt;em&gt;dsPIC 33EP128MC202&lt;/em&gt;. A sensor board from drotek endowing the &lt;em&gt;ICM-20608&lt;/em&gt; inertial sensor is screwed on the base board.
&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&#34;imu-sensor&#34;&gt;IMU sensor&lt;/h3&gt;
&lt;p&gt;The unique sensor used is a 6 DoF&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:DoF&#34;&gt;&lt;a href=&#34;#fn:DoF&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; IMU&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:IMU&#34;&gt;&lt;a href=&#34;#fn:IMU&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; sensor: the ICM-20608 from invensense mounted on a &lt;a href=&#34;https://store.drotek.com/sensors/779-imu-6dof-icm20608-invensense-pcb-8944595424761.html&#34;&gt;drotek board&lt;/a&gt; provides:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a 3 axis Accelerometers and&lt;/li&gt;
&lt;li&gt;a 3 axis rate gyro.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The ICM-20608 values are read through an I2C interface running at 400kHz. The I2C interface implemented through the I2C blocks for dsPIC enable hot plug of the sensor: The microcontroller sends an initialization sequence for the sensor each time this last is detected. Others sensor boards were tested endowed with MPU9250 and MPU6050 chips. The GY-91 board is currently the more commonly found on the market and has 10 DoF&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:DoF&#34;&gt;&lt;a href=&#34;#fn:DoF&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The accelerometer is configured with a range of $\pm 8g$ low pass filtered at $99Hz$.&lt;/li&gt;
&lt;li&gt;The rage gyro is configured with a range of $\pm 500 \deg/s$ low pass filtered at $250Hz$.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;UARTINTERFACE&#34;&gt;UART interface&lt;/h3&gt;
&lt;p&gt;The PCB board provides a $3.3V$ regulator and 4 pin extra interface ( GND, +3.3v, Tx, Rx ) to connect either a data logger, a radio link for telemetry module or an RC receiver capable of S.BUS or S.Port protocol (i.e. UART based).&lt;/p&gt;
&lt;h2 id=&#34;hw_trolley&#34;&gt;Base trolley&lt;/h2&gt;
&lt;h3 id=&#34;motors&#34;&gt;Motors&lt;/h3&gt;
&lt;p&gt;The base trolley is based on low cost a 2-wheel remote control toy. Its electronics is removed. Two pairs of wires power the two DC motors in either direction through an L298N H bridge external module.&lt;/p&gt;
&lt;figure&gt;
&lt;a href=&#34;https://lubin.kerhuel.eu/img/pendulum_toysrus_flywheels_package.jpg&#34;&gt;
&lt;img src=&#34;https://lubin.kerhuel.eu/img/pendulum_toysrus_flywheels_package.jpg&#34; width=&#34;50%&#34; /&gt;
&lt;/a&gt;
&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
&lt;h4&gt;FlyWheels toy package&lt;/h4&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;a href=&#34;https://lubin.kerhuel.eu/img/pendulum_toysrus_flywheels_open.jpg&#34;&gt;
&lt;img src=&#34;https://lubin.kerhuel.eu/img/pendulum_toysrus_flywheels_open.jpg&#34; width=&#34;50%&#34; /&gt;
&lt;/a&gt;
&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
&lt;h4&gt;Inside of the FlyWheels toy with its two DC motors&lt;/h4&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;!--
(pictures: [Package](Toysrus_FlyWheels_package.jpg), [vehicle](Toysrus_FlyWheels_Vehicle.jpg), [RC+vehicle](Toysrus_FlyWheels_Vehicle_Remote.jpg), [Inside](Toysrus_FlyWheels_Open.jpg))
--&gt;
&lt;h3 id=&#34;power-electronics&#34;&gt;Power electronics&lt;/h3&gt;
&lt;p&gt;The L298N H bridge controls two DC motors. For each motor:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Two logic signals set the motor state: direction, brake, or free-wheels.&lt;/li&gt;
&lt;li&gt;One logic signal power-up the motor depending on to the state defined. This third signal is modulated with a 100Hz square periodic signal (PWM) whose duty cycle vary from 0% to 100%. It sets the torque for the motor.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The flat multicolor rubbon connects 6 logic control signal (3 for each motor) from the Microstick II dsPIC to the input of the L298N H bridge.&lt;/p&gt;
&lt;figure&gt;
&lt;a href=&#34;https://lubin.kerhuel.eu/img/pendulum_base.png&#34;&gt;
&lt;img src=&#34;https://lubin.kerhuel.eu/img/pendulum_base.png&#34; alt=&#34;A *L298N H bridge* (for arduino) power board drives the two DC motors of a modified *FlyWheels* toy. *Four AA batteries* powers the pendulum.&#34; width=&#34;60%&#34; /&gt;
&lt;/a&gt;
&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
&lt;h4&gt;Base trolley of the inverted pendulum&lt;/h4&gt;
&lt;p&gt;
A &lt;em&gt;L298N H bridge&lt;/em&gt; (for arduino) power board drives the two DC motors of a modified &lt;em&gt;FlyWheels&lt;/em&gt; toy. &lt;em&gt;Four AA batteries&lt;/em&gt; powers the pendulum.
&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&#34;batteries&#34;&gt;Batteries&lt;/h3&gt;
&lt;p&gt;Four $1.2V$ AA NiMh batteries are dispatched on both side of the trolley. $\approx 4.8V$ powers the motors and the electronics. The black and red wires from the trolley to the top of the pendulum powers the Microstick II electronic and sensors.&lt;/p&gt;
&lt;h1 id=&#34;model&#34;&gt;Model&lt;/h1&gt;
&lt;p&gt;The pendulum model is composed of two intertwined sub-system:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The pendulum*, with 1 rotation DoF&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:DoF&#34;&gt;&lt;a href=&#34;#fn:DoF&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; $\theta$ angle around the wheels axis&lt;/li&gt;
&lt;li&gt;The trolley*, with 1 translation DoF&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:DoF&#34;&gt;&lt;a href=&#34;#fn:DoF&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; $x$ position.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;pendulum&#34;&gt;Pendulum&lt;/h2&gt;
&lt;p&gt;The rotational movement of the pendulum is modeled as a $2^{nd}$ order system. The pendulum is characterized by&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;its natural oscillation frequency $w_n = \sqrt{ \frac{g}{L} } $ which depends only of the length $L$ of the pendulum (trolley wheels axis to center of mass of the pendulum) and&lt;/li&gt;
&lt;li&gt;a damping factor $\zeta$.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$$ S_{pendulum}(p) = \frac{1}{ \frac{1}{w_n^2}p^2 + \frac{2 \zeta}{w_n}p + 1 }$$&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;Pendulum Parameters&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Identified Value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;$L$&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;$0.45 m$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;$\zeta$&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;$0.4$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;$w_n = \sqrt{\frac{g}{L}}$&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;$0.37 rad.s^{-1}$ ( $2.33 Hz$ )&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The parameter $L$ could be measured from the platform hardware but the damping factor $\zeta$ depends on friction and cannot be measured.&lt;/p&gt;
&lt;p&gt;Both $L$ and $\zeta$ are determined by an identification on the free oscillating pendulum. The pendulum is placed up-side between two chair back. Motors are off ; the pendulum is let free to oscillate. The initial state is $90 \deg$ angle from the resting position. It oscillates at its natural frequency $w_n$ until the damping friction ($\zeta$) stop the oscillations. Angular speed and accelerations are recorded onboard with a &lt;a href=&#34;#UARTINTERFACE&#34;&gt;data-logger&lt;/a&gt; board (&lt;a href=&#34;https://github.com/d-ronin/openlager/wiki&#34;&gt;openlager&lt;/a&gt;) connected on one dsPIC UART output.&lt;/p&gt;
&lt;p&gt;Recorded data fed a Simulink model which reconstruct the pendulum angle with a data fusion IMU algorithm. Then the pendulum angular oscillations is compard against a pendulum model output. The model parameters $L$ and $\zeta$ are tuned to best fit with the experimental data. See results in the table.&lt;/p&gt;
&lt;h2 id=&#34;trolley&#34;&gt;Trolley&lt;/h2&gt;
&lt;p&gt;The translational movement of the trolley is modeled as a $1^{st}$ order system characterized by its time constant $\tau$. This dynamic include the motor dynamics when it is loaded with the trolley considering the pendulum as vertical. The model do not consider the impact of the non vertical pendulum on the trolley translation, nor the couple applied on the pendulum when motors applies a couple on the wheels.&lt;/p&gt;
&lt;p&gt;$$ S_{trollley}(p) = \frac{1}{\tau p + 1}$$&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;Trolley Parameter&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Estimated Value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;$\tau$&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;$0.3s$&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The trolley is not equipped with any sensors. Thus the parameters $\tau$ is guessed instead of identified.&lt;/p&gt;
&lt;p&gt;The overall pendulum model including the trolley is simulated with its feedback loop controller and results are compared against recorded data of the real systme running the same feedback loop controller. The simulated pendulum states are re-initialised periodically ($\approx 2s$) with the real pendulum states as the model would diverge otherwise due to perturbations not modeled and model discripancies. Corectness of the model can be checked between theses periodic re-initialisation.&lt;/p&gt;
&lt;h1 id=&#34;controller&#34;&gt;Controller&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;Stabilization overview:&lt;/code&gt; The microcontroller computes the angle of the pendulum from the inertial sensor measurements (accelerometers and rate gyro). A feedback loop stabilize the pendulum up right while maintaining the pendulum position still. The pendulum translation is estimated through an internal dynamic model of the trolley stimulated with a copy of the DC motor command. The pendulum slow translations reflect the drift of the internal estimation of the displacement.&lt;/p&gt;
&lt;p&gt;Video of the inverted Pendulum when it encounters a wall:
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
&lt;iframe src=&#34;//player.vimeo.com/video/309876329&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;!-- You tube alternative:
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
&lt;iframe src=&#34;//www.youtube.com/embed/xbu4hXOnemE&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
--&gt;&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:DoF&#34;&gt;Degree of Freedom
&lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:DoF&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:IMU&#34;&gt;Inertial Measurement Unit
&lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:IMU&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description></item><item><title>Prototypage Rapide avec Simulink sur dsPIC</title><link>https://lubin.kerhuel.eu/slides/slides_dcmotor_insa/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lubin.kerhuel.eu/slides/slides_dcmotor_insa/</guid><description>
&lt;h1 id=&#34;prototypage-rapide&#34;&gt;Prototypage rapide&lt;/h1&gt;
&lt;h2 id=&#34;avec-simulink-sur-dspic&#34;&gt;avec Simulink sur dsPIC&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.microchip.com/SimulinkBlocks&#34;&gt;MPLAB device blocks for Simulink&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;L.Kerhuel &amp;amp; R.Delpoux&lt;/p&gt;
&lt;section data-background-image=&#34;./Model_Hardware_Test_withSampleTime.png&#34; data-background-opacity=0.06&gt;
&lt;/section&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;pendule-inverse&#34;&gt;Pendule inverse&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;./Inverted_Pendulum_ControlLoopCloseUp.png&#34; alt=&#34;./Inverted_Pendulum_ControlLoopCloseUp.png&#34; /&gt;&lt;/p&gt;
&lt;section data-background-image=&#34;./Model_Hardware_Test_withSampleTime.png&#34; data-background-opacity=0.06&gt;
&lt;/section&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&#34;./Model_Hardware_Test_withSampleTime.png&#34; alt=&#34;./Model_Hardware_Test_withSampleTime.png&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&#34;./Picooz_IdentificatoinBlockPresentation.png&#34; alt=&#34;./Picooz_IdentificatoinBlockPresentation.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;C:/M91449/MCHP_Blockset/Developpements/2013_08_19_Masters2013/Fig/Video_Logs_Shirp.avi&#34;&gt;Video&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&#34;./Picooz_Identificatoin_eq_01.png&#34; alt=&#34;./Picooz_Identificatoin_eq_01.png&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&#34;./Picooz_Identificatoin_eq_02.png&#34; alt=&#34;./Picooz_Identificatoin_eq_02.png&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&#34;./Picooz_SuperTwistingController.png&#34; alt=&#34;./Picooz_SuperTwistingController.png&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;section data-noprocess data-shortcode-slide
data-background-color=&#34;#FFFFFF&#34;
&gt;
&lt;p&gt;&lt;img src=&#34;./Picooz_SetpLarge_ClosedLoop_SimuVsReal.png&#34; alt=&#34;./Picooz_SetpLarge_ClosedLoop_SimuVsReal.png&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;plan&#34;&gt;Plan:&lt;/h2&gt;
&lt;p&gt;Mod√®le de simulation &amp;amp; g√©n√©ration de code&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Diff√©rences Temporel&lt;/li&gt;
&lt;li&gt;optimisation et type de donn√©es&lt;/li&gt;
&lt;li&gt;blocks et fonctionnalit√©s Simulink&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
DSPACE
&lt;/aside&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;aspect-temporel&#34;&gt;Aspect Temporel:&lt;/h2&gt;
&lt;h3 id=&#34;simulation&#34;&gt;Simulation&lt;/h3&gt;
&lt;p&gt;Mod√©lisation en temps continue, transform√© de Laplace dans le domaine p (ou s)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Solver r√©sout les √©quations diff√©rentielles&lt;/li&gt;
&lt;li&gt;Pas de contrainte temps r√©elle&lt;/li&gt;
&lt;li&gt;R√©sultat d√©pend du solveur ; pas de calcul variable.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;aspect-temporel-1&#34;&gt;Aspect Temporel:&lt;/h2&gt;
&lt;h3 id=&#34;impl√©mentation&#34;&gt;Impl√©mentation&lt;/h3&gt;
&lt;p&gt;Impl√©mentation en temps discret avec un pas de calcul fixe&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pas de solveur&lt;/li&gt;
&lt;li&gt;Contrainte temps r√©el&lt;/li&gt;
&lt;li&gt;Single-Rate &amp;amp; Multi-Rate&lt;/li&gt;
&lt;li&gt;Single-Tasking &amp;amp; Multi-Tasking&lt;/li&gt;
&lt;/ul&gt;
&lt;section data-background-image=&#34;./Scope_SingleTasking_70MIPS.png&#34; data-background-opacity=0.06 data-background-position=&#34;center&#34; &gt;
&lt;/section&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;discrete-times&#34;&gt;Discrete times&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Single-rate&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Les blocks ont tous la m√™me p√©riode d&amp;rsquo;ex√©cution
(M√™me couleur)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Multi-Rate&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Les blocks peuvent avoir des p√©riodes d&amp;rsquo;ex√©cution diff√©rentes
(Sch√©ma multicolore)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;section data-background-image=&#34;./Scope_SingleTasking_70MIPS.png&#34; data-background-opacity=0.06 data-background-position=&#34;center&#34; &gt;
&lt;/section&gt;
&lt;hr /&gt;
&lt;h4 id=&#34;mod√®le-multi-rate&#34;&gt;Mod√®le multi-rate&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./Model_Hardware_Test_withSampleTime.png&#34; alt=&#34;./Model_Hardware_Test_withSampleTime.png&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h4 id=&#34;charge-cpu-d-un-mod√®le-multi-rate-single-tasking-70-mips&#34;&gt;Charge CPU d&amp;rsquo;un mod√®le multi-rate single-tasking (@70 mips)&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./Scope_SingleTasking_70MIPS.png&#34; alt=&#34;./Scope_SingleTasking_70MIPS.png&#34; /&gt;&lt;/p&gt;
&lt;section data-background-image=&#34;./Scope_SingleTasking_70MIPS.png&#34; data-background-opacity=0.06 data-background-position=&#34;center&#34; &gt;
&lt;/section&gt;
&lt;hr /&gt;
&lt;h4 id=&#34;charge-cpu-d-un-mod√®le-multi-rate-single-tasking-20-mips&#34;&gt;Charge CPU d&amp;rsquo;un mod√®le multi-rate single-tasking (@20 mips)&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./Scope_SingleTasking_20MIPS.png&#34; alt=&#34;./Scope_SingleTasking_20MIPS.png&#34; /&gt;&lt;/p&gt;
&lt;section data-background-image=&#34;./Scope_SingleTasking_20MIPS.png&#34; data-background-opacity=0.06 data-background-position=&#34;center&#34; &gt;
&lt;/section&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;single-tasking&#34;&gt;Single-Tasking&lt;/h2&gt;
&lt;p&gt;Single-Tasking: Dans le slot de temps, l&amp;rsquo;ex√©cution de tous les blocks doit se terminer avant la fin du slot.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;multi-tasking&#34;&gt;Multi-Tasking&lt;/h2&gt;
&lt;p&gt;Multi-Tasking: Pr√©emption possible -&amp;gt; &lt;strong&gt;Monotonic Rate Scheduler&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;La t√¢che la plus fr√©quente √† la priorit√© maximale
&lt;ul&gt;
&lt;li&gt;Pr√©emptera une tache plus lente&lt;/li&gt;
&lt;li&gt;Beaucoup plus flexible&lt;/li&gt;
&lt;li&gt;Mode par d√©faut (voir options du solveur)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h4 id=&#34;charge-cpu-d-un-mod√®le-multi-rate-single-tasking-70-mips-1&#34;&gt;Charge CPU d&amp;rsquo;un mod√®le multi-rate single-tasking (@70 mips)&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./Scope_MultiTasking_70MIPS.png&#34; alt=&#34;./Scope_MultiTasking_70MIPS.png&#34; /&gt;&lt;/p&gt;
&lt;section data-background-image=&#34;./Scope_MultiTasking_70MIPS.png&#34; data-background-opacity=0.06 data-background-position=&#34;center&#34; &gt;
&lt;/section&gt;
&lt;hr /&gt;
&lt;h4 id=&#34;charge-cpu-d-un-mod√®le-multi-rate-single-tasking-20-mips-1&#34;&gt;Charge CPU d&amp;rsquo;un mod√®le multi-rate single-tasking (@20 mips)&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./Scope_MultiTasking_20MIPS.png&#34; alt=&#34;./Scope_MultiTasking_20MIPS.png&#34; /&gt;&lt;/p&gt;
&lt;section data-background-image=&#34;./Scope_MultiTasking_20MIPS.png&#34; data-background-opacity=0.06 data-background-position=&#34;center&#34; &gt;
&lt;/section&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;tasking-conclusion&#34;&gt;Tasking Conclusion&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Single-Tasking @ 20 MIPS -&amp;gt; &lt;strong&gt;Overload&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;dispatcher la tache la plus lente sur plusieurs slots&lt;/li&gt;
&lt;li&gt;(option d&amp;rsquo;offset dans &lt;strong&gt;Time Step&lt;/strong&gt; -&amp;gt; &lt;em&gt;[.001 .005])&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Multi-Tasking @ 20 MIPS -&amp;gt; &lt;strong&gt;Ok&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Rate transfert block options
&lt;ul&gt;
&lt;li&gt;Data Integrity&lt;/li&gt;
&lt;li&gt;Deterministic data transfert&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;optimisation&#34;&gt;Optimisation&lt;/h1&gt;
&lt;h2 id=&#34;type-de-donn√©es&#34;&gt;type de donn√©es&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Virgule Fixe&lt;/li&gt;
&lt;li&gt;Virgule Flottante&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&#34;./FloatFixed_1.png&#34; alt=&#34;./FloatFixed_1.png&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;flotant&#34;&gt;Flotant&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;IEEE 754&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Single&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Double&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Format width&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;64&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Sign bit&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;exponent width&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Precision width&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;23+1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;52+1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;1st bit of the significand is always 1. Phantom bit&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;custom-8-bit-floating-point&#34;&gt;Custom 8 bit Floating point&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;Parameter&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Single&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Double&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Custom&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Format width&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;64&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Sign bit&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;exponent width&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;11&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Precision width&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;23+1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;52+1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3+1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&#34;./FloatFixed_2.png&#34; alt=&#34;./FloatFixed_2.png&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&#34;./FloatFixed_3.png&#34; alt=&#34;./FloatFixed_3.png&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&#34;./FloatFixed_4.png&#34; alt=&#34;./FloatFixed_4.png&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;script-matlab-pour-tester-un-flottant-8-bits&#34;&gt;Script Matlab pour tester un flottant 8 bits&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-MATLAB&#34;&gt;% 4 bit exponent (signed)
emin = -7; emax = 6;
% 3 bits significand
p = 3;
exps = 2.^[emin:emax];
vals = (2^p) + [0:(2^p-1)]; % significand with leading 1
TotalVal = vals&#39;*exps;
% add denormalized values
8bitFloat = unique([TotalVal ; 2^emin * [0:(2^m-1)]&#39;]);
8bitFloat = unique(flipud(-TotalVal) ;TotalVal]); % with neg vals
&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;simulink&#34;&gt;Simulink&lt;/h1&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;data-type&#34;&gt;Data-type&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;./Simulink_TypeCast_FixPtFormat.png&#34; alt=&#34;./Simulink_TypeCast_FixPtFormat.png&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;datatype&#34;&gt;Datatype&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;int8&amp;hellip;uint23&lt;/li&gt;
&lt;li&gt;fixdt(1,16,15)
&lt;ul&gt;
&lt;li&gt;Scaling is En15 (Exp neg)&lt;/li&gt;
&lt;li&gt;$$\rightarrow 2^-15$$&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;fixdt(1,16)
&lt;ul&gt;
&lt;li&gt;signed (1)&lt;/li&gt;
&lt;li&gt;16 bit width&lt;/li&gt;
&lt;li&gt;Scaling is derived from min &amp;amp; max&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;datatype-1&#34;&gt;Datatype&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;./Simulink_TypeCast_SlopeAndBias.png&#34; alt=&#34;./Simulink_TypeCast_SlopeAndBias.png&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;fixdt(1,16,.01,0)
&lt;ul&gt;
&lt;li&gt;Scaling is sfix16&lt;strong&gt;Sp&lt;/strong&gt;01&lt;/li&gt;
&lt;li&gt;Slope point 01&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&#34;./Simulink_TypeCast_SlopeAndBias_Sat.png&#34; alt=&#34;./Simulink_TypeCast_SlopeAndBias_Sat.png&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;tp&#34;&gt;TP&lt;/h1&gt;
&lt;h2 id=&#34;https-www-ctrl-elec-fr&#34;&gt;&lt;a href=&#34;https://www.ctrl-elec.fr&#34;&gt;https://www.ctrl-elec.fr&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://lubin.kerhuel.eu/slides/slides_dcmotor_insa&#34;&gt;https://lubin.kerhuel.eu/slides/slides_dcmotor_insa&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;elements-de-correction&#34;&gt;Elements de correction&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&#34;./TP_Correction_OpAmp.png&#34; alt=&#34;./TP_Correction_OpAmp.png&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&#34;./TP_Correction_ADC.png&#34; alt=&#34;./TP_Correction_ADC.png&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;pwm-settings&#34;&gt;PWM settings&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&#34;./TP_Correction_PWM_Main.png&#34; alt=&#34;./TP_Correction_PWM_Main.png&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&#34;./TP_Correction_PWM_02.png&#34; alt=&#34;./TP_Correction_PWM_02.png&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&#34;./TP_Correction_PWM_03.png&#34; alt=&#34;./TP_Correction_PWM_03.png&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&#34;./TP_Correction_PWM_04.png&#34; alt=&#34;./TP_Correction_PWM_04.png&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&#34;./TP_Correction_PWM_05.png&#34; alt=&#34;./TP_Correction_PWM_05.png&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;liens&#34;&gt;Liens:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;MPLAB device blocks for Simulink:
&lt;a href=&#34;https://www.microchip.com/SimulinkBlocks&#34;&gt;https://www.microchip.com/SimulinkBlocks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MPLAB X:
&lt;a href=&#34;https://www.microchip.com/MPLABX&#34;&gt;https://www.microchip.com/MPLABX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;XC16:
&lt;a href=&#34;https://www.microchip.com/XC16&#34;&gt;https://www.microchip.com/XC16&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>test slides</title><link>https://lubin.kerhuel.eu/slides/testslides/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lubin.kerhuel.eu/slides/testslides/</guid><description>
&lt;hr /&gt;
&lt;h1 id=&#34;test-slides&#34;&gt;Test slides&lt;/h1&gt;
&lt;hr /&gt;
&lt;section data-background-iframe=&#34;https://www.youtube.com/embed/algBpBeQIOY?autoplay=1&amp;controls=1&amp;showinfo=0&amp;autohide=1&amp;rel=0&amp;modestbranding=1&amp;loop=&amp;start=0&#34; data-background-opacity=0.06 data-background-repeat=&#34;repeat&#34;&gt;
&lt;/section&gt;
&lt;h1 id=&#34;my-title&#34;&gt;My Title !&lt;/h1&gt;
&lt;hr /&gt;
&lt;section data-noprocess data-shortcode-slide
data-background-iframe=&#34;https://www.youtube.com/embed/algBpBeQIOY?autoplay=1&amp;amp;controls=1&amp;amp;showinfo=0&amp;amp;autohide=1&#34;
data-background-opacity=&#34;0.1&#34;
data-backgroundTransition=&#34;none&#34;
&gt;
&lt;hr /&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
&lt;iframe src=&#34;//www.youtube.com/embed/algBpBeQIOY?autoplay=1&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;mes notes&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;controls&#34;&gt;Controls&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Next: &lt;code&gt;Right Arrow&lt;/code&gt; or &lt;code&gt;Space&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Previous: &lt;code&gt;Left Arrow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start: &lt;code&gt;Home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Finish: &lt;code&gt;End&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Overview: &lt;code&gt;Esc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Speaker notes: &lt;code&gt;S&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fullscreen: &lt;code&gt;F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Zoom: &lt;code&gt;Alt + Click&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hakimel/reveal.js#pdf-export&#34;&gt;PDF Export&lt;/a&gt;: &lt;code&gt;E&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;code-highlighting&#34;&gt;Code Highlighting&lt;/h2&gt;
&lt;p&gt;Inline code: &lt;code&gt;variable&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Code block:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;porridge = &amp;quot;blueberry&amp;quot;
if porridge == &amp;quot;blueberry&amp;quot;:
print(&amp;quot;Eating...&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;math&#34;&gt;Math&lt;/h2&gt;
&lt;p&gt;In-line math: $x + y = z$&lt;/p&gt;
&lt;p&gt;Block math:&lt;/p&gt;
&lt;p&gt;$$
f\left( x \right) = \;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;fragments&#34;&gt;Fragments&lt;/h2&gt;
&lt;p&gt;Make content appear incrementally&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} **Two** {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press &lt;code&gt;Space&lt;/code&gt; to play!&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;fragment &#34; &gt;
One
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
&lt;strong&gt;Two&lt;/strong&gt;
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
Three
&lt;/span&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;A fragment can accept two optional parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;: use a custom style (requires definition in custom CSS)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weight&lt;/code&gt;: sets the order in which a fragment appears&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;speaker-notes&#34;&gt;Speaker Notes&lt;/h2&gt;
&lt;p&gt;Add speaker notes to your presentation&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{% speaker_note %}}
- Only the speaker can read these notes
- Press `S` key to view
{{% /speaker_note %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press the &lt;code&gt;S&lt;/code&gt; key to view the speaker notes!&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
&lt;ul&gt;
&lt;li&gt;Only the speaker can read these notes&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;S&lt;/code&gt; key to view&lt;/li&gt;
&lt;/ul&gt;
&lt;/aside&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;black: Black background, white text, blue links (default)&lt;/li&gt;
&lt;li&gt;white: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;league: Gray background, white text, blue links&lt;/li&gt;
&lt;li&gt;beige: Beige background, dark text, brown links&lt;/li&gt;
&lt;li&gt;sky: Blue background, thin dark text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;night: Black background, thick white text, orange links&lt;/li&gt;
&lt;li&gt;serif: Cappuccino background, gray text, brown links&lt;/li&gt;
&lt;li&gt;simple: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;solarized: Cream-colored background, dark green text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;section data-noprocess data-shortcode-slide
data-background-image=&#34;/img/boards.jpg&#34;
&gt;
&lt;h2 id=&#34;custom-slide&#34;&gt;Custom Slide&lt;/h2&gt;
&lt;p&gt;Customize the slide style and background&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; slide background-image=&amp;quot;/img/boards.jpg&amp;quot; &amp;gt;}}
{{&amp;lt; slide background-color=&amp;quot;#0000FF&amp;quot; &amp;gt;}}
{{&amp;lt; slide class=&amp;quot;my-style&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;custom-css-example&#34;&gt;Custom CSS Example&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s make headers navy colored.&lt;/p&gt;
&lt;p&gt;Create &lt;code&gt;assets/css/reveal_custom.css&lt;/code&gt; with:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.reveal section h1,
.reveal section h2,
.reveal section h3 {
color: navy;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;questions&#34;&gt;Questions?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://discourse.gohugo.io&#34;&gt;Ask&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;</description></item></channel></rss>