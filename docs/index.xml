<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rapid Control Prototyping on Rapid Control Prototyping</title>
    <link>https://lubin.kerhuel.eu/</link>
    <description>Recent content in Rapid Control Prototyping on Rapid Control Prototyping</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Mon, 17 Dec 2018 00:00:00 +0100</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Real Time Control for a DC Motor</title>
      <link>https://lubin.kerhuel.eu/project/lab_dc_motor/</link>
      <pubDate>Sat, 01 Dec 2018 00:00:00 +0100</pubDate>
      
      <guid>https://lubin.kerhuel.eu/project/lab_dc_motor/</guid>
      <description>

&lt;p&gt;Control a 24V DC motor using the MCLV V2 board with a dsPIC 33EP256MC506.
This hands-on is for 5th year students at INSA-Lyon.&lt;/p&gt;

&lt;p&gt;The hands-on Lab subject available at: &lt;a href=&#34;https://rtdc.ctrl-elec.fr/&#34; target=&#34;_blank&#34;&gt;https://rtdc.ctrl-elec.fr/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Slides presents the adaptation required to go from a Simulink model for Simulation (or DSPACE) to a Simulink model targeting a microcontrollers. Two topics are presented:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Real-time scheduler / CPU load analysis&lt;/li&gt;
&lt;li&gt;Fixed-point datatypes&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;authors&#34;&gt;Authors:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Romain DELPOUX (Romain.Delpoux at insa-lyon.fr), Assistant Professor, INSA de Lyon, Laboratoire Amp√®re UMR CNRS 5005.&lt;/li&gt;
&lt;li&gt;Lubin KERHUEL (Lubin.Kerhuel at microchip.com), Dr-Engineer, Microchip Technology Inc.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Example Page11</title>
      <link>https://lubin.kerhuel.eu/tutorial/subtutorial/example/</link>
      <pubDate>Sun, 09 Sep 2018 00:00:00 +0200</pubDate>
      
      <guid>https://lubin.kerhuel.eu/tutorial/subtutorial/example/</guid>
      <description>

&lt;p&gt;#include &amp;ldquo;includeme.md&amp;rdquo;&lt;/p&gt;

&lt;p&gt;In this tutorial, I&amp;rsquo;ll share my top 10 tips for getting started with Academic:&lt;/p&gt;

&lt;h1 id=&#34;main-title&#34;&gt;main title&lt;/h1&gt;

&lt;p&gt;Simulink Simulink, Mavlink keywords.
Matlab,&lt;/p&gt;

&lt;h2 id=&#34;2nd-bullet&#34;&gt;2nd bullet&lt;/h2&gt;

&lt;p&gt;$$ \frac{\pi}{2} = 5 $$&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://lubin.kerhuel.eu/img/Plane_Firestar.jpg&#34; alt=&#34;Plane_Firestar.jpg&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;tip-1&#34;&gt;Tip 1&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;Matlab code 
1 + 2 . 0
5 6 8 4 8 sin(2)

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;tip-2&#34;&gt;Tip 2&lt;/h2&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;

&lt;h1 id=&#34;second-main-title&#34;&gt;second main title&lt;/h1&gt;

&lt;p&gt;piou piou&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Example Page 13</title>
      <link>https://lubin.kerhuel.eu/tutorial/subtutorial/example3/</link>
      <pubDate>Sun, 09 Sep 2018 00:00:00 +0200</pubDate>
      
      <guid>https://lubin.kerhuel.eu/tutorial/subtutorial/example3/</guid>
      <description>

&lt;h1 id=&#34;je-suis-un-titre&#34;&gt;je suis un titre&lt;/h1&gt;

&lt;p&gt;$\frac{1}{pi}$&lt;/p&gt;

&lt;p&gt;mavlink&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Example Page1111</title>
      <link>https://lubin.kerhuel.eu/tutorial/subtutorial/hardware_setup/</link>
      <pubDate>Sun, 09 Sep 2018 00:00:00 +0200</pubDate>
      
      <guid>https://lubin.kerhuel.eu/tutorial/subtutorial/hardware_setup/</guid>
      <description>

&lt;h1 id=&#34;simulink-model-to-target-a-dspic-mclv-board-running-a-dc-motor&#34;&gt;Simulink model to target a dsPIC MCLV board running a DC motor&lt;/h1&gt;

&lt;p&gt;The model contains blocks to configure &lt;strong&gt;dsPIC peripheral&lt;/strong&gt; (PWM, ADC and QEI) to run a &lt;strong&gt;DC motor&lt;/strong&gt; with the &lt;strong&gt;MCLV-V2 board&lt;/strong&gt; equipped with the &lt;strong&gt;dsPIC-33EP256MC506 PIM&lt;/strong&gt; using internal Op-Amps.
Sensors measurements are visualized on the computer while the motor is running.&lt;/p&gt;

&lt;h2 id=&#34;getting-started&#34;&gt;Getting Started&lt;/h2&gt;

&lt;p&gt;The model &lt;a href=&#34;[fig][fig:Model_Hardware_Test_withSampleTime]&#34; target=&#34;_blank&#34;&gt;MCLV2_dsPIC33EP256MC506_externalOpAmp_HardwareTest.mdl&lt;/a&gt; is for code generation (peripheral blocks have no effects during a simulation).
Open the Simulink model and push the build button on the top right, below the Simulink windows menu bar.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;./../Fig/Model_Hardware_Test_withSampleTime.png&#34; title=&#34;Simulink model to generate code for the MCLV-V2 board with a dsPIC PIM to run and log data from a DC motor.&#34;&gt;&lt;img src=&#34;./../Fig/Model_Hardware_Test_withSampleTime.png&#34; alt=&#34;Simulink Model&#34; title=&#34;Simulink model to generate code for the MCLV-V2 board with a dsPIC PIM to run and log data from a DC motor.&#34; /&gt;&lt;/a&gt;
*fig: Model &lt;a href=&#34;./MCLV2_dsPIC33EP256MC506_externalOpAmp_HardwareTest.mdl&#34;&gt;MCLV2_dsPIC33EP256MC506_externalOpAmp_HardwareTest.mdl&lt;/a&gt; set-up the dsPIC 33EP256MC506 peripherals with internal op-amps for the MCLV-v2 board. Two PWM signals updated &lt;strong&gt;at 20kHz&lt;/strong&gt; drives a DC motor through a H mosfet structure. One QEI peripheral sampled &lt;strong&gt;at 500Hz&lt;/strong&gt; provides shaft position and speed from an optical encoder. Two ADC channels provides respectively the board potentiometer position and the current measurement from a shunt resistor. These four measurements are under-sampled &lt;strong&gt;at 100Hz&lt;/strong&gt; and sent through the 115200 UART connection to the computer and decoded with the picgui graphical interface.*&lt;/p&gt;

&lt;h3 id=&#34;hardware-requirements&#34;&gt;Hardware requirements:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.microchip.com/dsPICDEMMCLV-2DevelopmentBoard866&#34; title=&#34;Motor Control Board&#34; target=&#34;_blank&#34;&gt;MCLV-V2&lt;/a&gt; Motor Control Board&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.microchip.com/DevelopmentTools/ProductDetails/ma330031&#34; title=&#34;Daughter board for MCLV motor control board&#34; target=&#34;_blank&#34;&gt;PIM dsPIC33EP256MC506&lt;/a&gt; with internal Op-Amp&lt;/li&gt;
&lt;li&gt;Programmer (&lt;a href=&#34;https://www.microchip.com/pickit4&#34; title=&#34;Microchip programmer&#34; target=&#34;_blank&#34;&gt;PICkit 4&lt;/a&gt;, &lt;a href=&#34;https://www.microchip.com/icd4&#34; title=&#34;Microchip programmer&#34; target=&#34;_blank&#34;&gt;ICD4&lt;/a&gt;, &lt;a href=&#34;https://www.microchip.com/realice&#34; title=&#34;Microchip programmer&#34; target=&#34;_blank&#34;&gt;Real-Ice&lt;/a&gt;, &lt;a href=&#34;https://www.microchip.com/pickit3&#34; title=&#34;Microchip programmer&#34; target=&#34;_blank&#34;&gt;PICkit 3&lt;/a&gt;, &lt;a href=&#34;https://www.microchip.com/icd3&#34; title=&#34;Microchip programmer&#34; target=&#34;_blank&#34;&gt;ICD3&lt;/a&gt;, &amp;hellip;)&lt;/li&gt;
&lt;li&gt;DC motor (&lt;a href=&#34;https://uk.rs-online.com/web/p/dc-motors/0716200/&#34; title=&#34;Parvalux Brushed DC Motor, 90 W, 24 V dc, 3000 rpm, 7.93mm Shaft Diameter&#34; target=&#34;_blank&#34;&gt;Pravalux Brushed DC Motor, 90 W, 24 V dc, 3000 rpm&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Cable to send data from the MCLV board (Tx) to the PC (Rx) (like a &lt;a href=&#34;https://www.ftdichip.com/Products/Cables/USBTTLSerial.htm&#34; title=&#34;USB TTL Serial Cables&#34; target=&#34;_blank&#34;&gt;FTDI cable&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;software-requirements&#34;&gt;Software requirements:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Matlab/Simulink

&lt;ul&gt;
&lt;li&gt;Embedded coder (Matlab Coder &amp;amp; Simulink Coder)&lt;/li&gt;
&lt;li&gt;Fixed point toolbox&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.microchip.com/SimulinkBlocks&#34; title=&#34;Blockset for dsPIC and PIC32&#34; target=&#34;_blank&#34;&gt;MPLAB device blocks for Simulink&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.microchip.com/MPLABX&#34; title=&#34;Microchip development environment&#34; target=&#34;_blank&#34;&gt;MPLAB X IDE&lt;/a&gt; development (required to flash the binary from matlab)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.microchip.com/XC16&#34; title=&#34;Microchip Compiler for dsPIC familly&#34; target=&#34;_blank&#34;&gt;XC16&lt;/a&gt; compiler&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;experiment&#34;&gt;Experiment&lt;/h2&gt;

&lt;h3 id=&#34;generate-code-and-compile&#34;&gt;Generate code and compile:&lt;/h3&gt;

&lt;p&gt;The build icon on top right of Simulink model, (see &lt;a href=&#34;./../Fig/Model_Hardware_Test_withSampleTime.png&#34; title=&#34;Simulink model to generate code for the MCLV-V2 board with a dsPIC PIM to run and log data from a DC motor.&#34;&gt;fig&lt;/a&gt; above) do:
1. generates c source code,
2. compiles c code and
3. flash the resulting binary to the MCLV targeted board.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If programming the board fails (not powered, not connected,&amp;hellip;),
use the &lt;strong&gt;Microchip -&amp;gt; Flash&lt;/strong&gt; within the Simulink model menu.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;run-the-dc-motor&#34;&gt;Run the DC motor:&lt;/h3&gt;

&lt;p&gt;With the MCLV2 board powered and programmed, rotate the potentiometer to accelerate motor / reverse direction. &lt;strong&gt;Setting the potentiometer at middle position (off) at power on to avoid current surge.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;data-visualization-with-picgui&#34;&gt;Data Visualization with picgui:&lt;/h3&gt;

&lt;p&gt;Open the picgui interface (&lt;a href=&#34;./../Fig/DataVisu.png&#34; title=&#34;picgui, custom script and figure that present in real-time potentiometer, motor speed and current measured&#34;&gt;fig&lt;/a&gt;) (type &lt;strong&gt;picgui&lt;/strong&gt; at matlab prompt or double click on the &lt;strong&gt;Interface Tx-Matlab block&lt;/strong&gt; in the model)
1. Select host UART port and connect at 115200 bauds
1. Replace the default script within the picgui interface to a call the customized matlab script &lt;a href=&#34;see figure below&#34; target=&#34;_blank&#34;&gt;DataVisu.m&lt;/a&gt;
1. Push the  &lt;strong&gt;start&lt;/strong&gt; button to visualize runtime curves showing potentiometer, motor position, motor speed and current measured on shunt resistors&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;./../Fig/DataVisu.png&#34; title=&#34;picgui, custom script and figure that present in real-time potentiometer, motor speed and current measured&#34;&gt;&lt;img src=&#34;./../Fig/DataVisu.png&#34; alt=&#34;picgui interface&#34; title=&#34;picgui, custom script and figure that present in real-time potentiometer, motor speed and current measured&#34; /&gt;&lt;/a&gt;
&lt;em&gt;fig: The picgui interface decode the incoming UART data stream and plot in real-time received values, here potentiometer, motor speed and current measured. Plots in figure are realized with a matlab script which is continuously refreshing the graphs using incoming data. This script can be modified providing all the matlab capabilities to customize visualization or perform further analysis on received data in real-time.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;./../../README.md&#34;&gt;Back to project presentation&lt;/a&gt;&lt;/p&gt;

&lt;!---  math test not working on GitHub: $\sqrt(2) + \frac{1}{2^5}$
comment  --&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://lubin.kerhuel.eu/tutorial/subtutorial2/hardware_setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lubin.kerhuel.eu/tutorial/subtutorial2/hardware_setup/</guid>
      <description>

&lt;h1 id=&#34;simulink-model-to-target-a-dspic-mclv-board-running-a-dc-motor&#34;&gt;Simulink model to target a dsPIC MCLV board running a DC motor&lt;/h1&gt;

&lt;p&gt;The model contains blocks to configure &lt;strong&gt;dsPIC peripheral&lt;/strong&gt; (PWM, ADC and QEI) to run a &lt;strong&gt;DC motor&lt;/strong&gt; with the &lt;strong&gt;MCLV-V2 board&lt;/strong&gt; equipped with the &lt;strong&gt;dsPIC-33EP256MC506 PIM&lt;/strong&gt; using internal Op-Amps.
Sensors measurements are visualized on the computer while the motor is running.&lt;/p&gt;

&lt;h2 id=&#34;getting-started&#34;&gt;Getting Started&lt;/h2&gt;

&lt;p&gt;The model &lt;a href=&#34;[fig][fig:Model_Hardware_Test_withSampleTime]&#34; target=&#34;_blank&#34;&gt;MCLV2_dsPIC33EP256MC506_externalOpAmp_HardwareTest.mdl&lt;/a&gt; is for code generation (peripheral blocks have no effects during a simulation).
Open the Simulink model and push the build button on the top right, below the Simulink windows menu bar.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;./../Fig/Model_Hardware_Test_withSampleTime.png&#34; title=&#34;Simulink model to generate code for the MCLV-V2 board with a dsPIC PIM to run and log data from a DC motor.&#34;&gt;&lt;img src=&#34;./../Fig/Model_Hardware_Test_withSampleTime.png&#34; alt=&#34;Simulink Model&#34; title=&#34;Simulink model to generate code for the MCLV-V2 board with a dsPIC PIM to run and log data from a DC motor.&#34; /&gt;&lt;/a&gt;
*fig: Model &lt;a href=&#34;./MCLV2_dsPIC33EP256MC506_externalOpAmp_HardwareTest.mdl&#34;&gt;MCLV2_dsPIC33EP256MC506_externalOpAmp_HardwareTest.mdl&lt;/a&gt; set-up the dsPIC 33EP256MC506 peripherals with internal op-amps for the MCLV-v2 board. Two PWM signals updated &lt;strong&gt;at 20kHz&lt;/strong&gt; drives a DC motor through a H mosfet structure. One QEI peripheral sampled &lt;strong&gt;at 500Hz&lt;/strong&gt; provides shaft position and speed from an optical encoder. Two ADC channels provides respectively the board potentiometer position and the current measurement from a shunt resistor. These four measurements are under-sampled &lt;strong&gt;at 100Hz&lt;/strong&gt; and sent through the 115200 UART connection to the computer and decoded with the picgui graphical interface.*&lt;/p&gt;

&lt;h3 id=&#34;hardware-requirements&#34;&gt;Hardware requirements:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.microchip.com/dsPICDEMMCLV-2DevelopmentBoard866&#34; title=&#34;Motor Control Board&#34; target=&#34;_blank&#34;&gt;MCLV-V2&lt;/a&gt; Motor Control Board&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.microchip.com/DevelopmentTools/ProductDetails/ma330031&#34; title=&#34;Daughter board for MCLV motor control board&#34; target=&#34;_blank&#34;&gt;PIM dsPIC33EP256MC506&lt;/a&gt; with internal Op-Amp&lt;/li&gt;
&lt;li&gt;Programmer (&lt;a href=&#34;https://www.microchip.com/pickit4&#34; title=&#34;Microchip programmer&#34; target=&#34;_blank&#34;&gt;PICkit 4&lt;/a&gt;, &lt;a href=&#34;https://www.microchip.com/icd4&#34; title=&#34;Microchip programmer&#34; target=&#34;_blank&#34;&gt;ICD4&lt;/a&gt;, &lt;a href=&#34;https://www.microchip.com/realice&#34; title=&#34;Microchip programmer&#34; target=&#34;_blank&#34;&gt;Real-Ice&lt;/a&gt;, &lt;a href=&#34;https://www.microchip.com/pickit3&#34; title=&#34;Microchip programmer&#34; target=&#34;_blank&#34;&gt;PICkit 3&lt;/a&gt;, &lt;a href=&#34;https://www.microchip.com/icd3&#34; title=&#34;Microchip programmer&#34; target=&#34;_blank&#34;&gt;ICD3&lt;/a&gt;, &amp;hellip;)&lt;/li&gt;
&lt;li&gt;DC motor (&lt;a href=&#34;https://uk.rs-online.com/web/p/dc-motors/0716200/&#34; title=&#34;Parvalux Brushed DC Motor, 90 W, 24 V dc, 3000 rpm, 7.93mm Shaft Diameter&#34; target=&#34;_blank&#34;&gt;Pravalux Brushed DC Motor, 90 W, 24 V dc, 3000 rpm&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Cable to send data from the MCLV board (Tx) to the PC (Rx) (like a &lt;a href=&#34;https://www.ftdichip.com/Products/Cables/USBTTLSerial.htm&#34; title=&#34;USB TTL Serial Cables&#34; target=&#34;_blank&#34;&gt;FTDI cable&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;software-requirements&#34;&gt;Software requirements:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Matlab/Simulink

&lt;ul&gt;
&lt;li&gt;Embedded coder (Matlab Coder &amp;amp; Simulink Coder)&lt;/li&gt;
&lt;li&gt;Fixed point toolbox&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.microchip.com/SimulinkBlocks&#34; title=&#34;Blockset for dsPIC and PIC32&#34; target=&#34;_blank&#34;&gt;MPLAB device blocks for Simulink&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.microchip.com/MPLABX&#34; title=&#34;Microchip development environment&#34; target=&#34;_blank&#34;&gt;MPLAB X IDE&lt;/a&gt; development (required to flash the binary from matlab)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.microchip.com/XC16&#34; title=&#34;Microchip Compiler for dsPIC familly&#34; target=&#34;_blank&#34;&gt;XC16&lt;/a&gt; compiler&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;experiment&#34;&gt;Experiment&lt;/h2&gt;

&lt;h3 id=&#34;generate-code-and-compile&#34;&gt;Generate code and compile:&lt;/h3&gt;

&lt;p&gt;The build icon on top right of Simulink model, (see &lt;a href=&#34;./../Fig/Model_Hardware_Test_withSampleTime.png&#34; title=&#34;Simulink model to generate code for the MCLV-V2 board with a dsPIC PIM to run and log data from a DC motor.&#34;&gt;fig&lt;/a&gt; above) do:
1. generates c source code,
2. compiles c code and
3. flash the resulting binary to the MCLV targeted board.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If programming the board fails (not powered, not connected,&amp;hellip;),
use the &lt;strong&gt;Microchip -&amp;gt; Flash&lt;/strong&gt; within the Simulink model menu.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;run-the-dc-motor&#34;&gt;Run the DC motor:&lt;/h3&gt;

&lt;p&gt;With the MCLV2 board powered and programmed, rotate the potentiometer to accelerate motor / reverse direction. &lt;strong&gt;Setting the potentiometer at middle position (off) at power on to avoid current surge.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;data-visualization-with-picgui&#34;&gt;Data Visualization with picgui:&lt;/h3&gt;

&lt;p&gt;Open the picgui interface (&lt;a href=&#34;./../Fig/DataVisu.png&#34; title=&#34;picgui, custom script and figure that present in real-time potentiometer, motor speed and current measured&#34;&gt;fig&lt;/a&gt;) (type &lt;strong&gt;picgui&lt;/strong&gt; at matlab prompt or double click on the &lt;strong&gt;Interface Tx-Matlab block&lt;/strong&gt; in the model)
1. Select host UART port and connect at 115200 bauds
1. Replace the default script within the picgui interface to a call the customized matlab script &lt;a href=&#34;see figure below&#34; target=&#34;_blank&#34;&gt;DataVisu.m&lt;/a&gt;
1. Push the  &lt;strong&gt;start&lt;/strong&gt; button to visualize runtime curves showing potentiometer, motor position, motor speed and current measured on shunt resistors&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;./../Fig/DataVisu.png&#34; title=&#34;picgui, custom script and figure that present in real-time potentiometer, motor speed and current measured&#34;&gt;&lt;img src=&#34;./../Fig/DataVisu.png&#34; alt=&#34;picgui interface&#34; title=&#34;picgui, custom script and figure that present in real-time potentiometer, motor speed and current measured&#34; /&gt;&lt;/a&gt;
&lt;em&gt;fig: The picgui interface decode the incoming UART data stream and plot in real-time received values, here potentiometer, motor speed and current measured. Plots in figure are realized with a matlab script which is continuously refreshing the graphs using incoming data. This script can be modified providing all the matlab capabilities to customize visualization or perform further analysis on received data in real-time.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;./../../README.md&#34;&gt;Back to project presentation&lt;/a&gt;&lt;/p&gt;

&lt;!---  math test not working on GitHub: $\sqrt(2) + \frac{1}{2^5}$
comment  --&gt;
</description>
    </item>
    
  </channel>
</rss>
